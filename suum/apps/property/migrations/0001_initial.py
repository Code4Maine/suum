# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-04 03:49
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('land', models.FloatField(blank=True, null=True)),
                ('building', models.FloatField(blank=True, null=True)),
                ('exemption', models.FloatField(blank=True, null=True)),
                ('tax_amount', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('style', models.IntegerField()),
                ('dwelling_units', models.IntegerField()),
                ('other_units', models.IntegerField()),
                ('stories', models.IntegerField()),
                ('exterior_walls', models.IntegerField()),
                ('roof', models.IntegerField()),
                ('sq_footage_masonry_trim', models.FloatField()),
                ('street_setback', models.IntegerField()),
                ('basement_floor', models.IntegerField()),
                ('year_built', models.IntegerField()),
                ('year_remodeled', models.IntegerField()),
                ('foundtion', models.IntegerField()),
                ('basement', models.IntegerField()),
                ('basement_garage_num_cars', models.IntegerField()),
                ('sq_footage_basement_living_area', models.FloatField()),
                ('finished_basement_grade', models.IntegerField()),
                ('finished_basement_factor', models.IntegerField()),
                ('heat_type', models.IntegerField()),
                ('cool_type', models.IntegerField()),
                ('kitchen_style', models.IntegerField()),
                ('bath_style', models.IntegerField()),
                ('rooms', models.IntegerField()),
                ('bedrooms', models.IntegerField()),
                ('full_baths', models.IntegerField()),
                ('half_baths', models.IntegerField()),
                ('additional_fixtures', models.IntegerField()),
                ('fireplaces', models.IntegerField()),
                ('attic', models.IntegerField()),
                ('insulation', models.IntegerField()),
                ('percent_unfinished', models.FloatField()),
                ('grade', models.FloatField()),
                ('factor', models.IntegerField()),
                ('sq_footage', models.FloatField()),
                ('condition', models.IntegerField()),
                ('sq_living_area', models.FloatField()),
                ('comm_occupancy_code', models.IntegerField()),
                ('comm_dwelling_units', models.IntegerField()),
                ('comm_building_class', models.IntegerField()),
                ('comm_building_quality', models.IntegerField()),
                ('comm_grade_factor', models.IntegerField()),
                ('comm_exterior_walls', models.IntegerField()),
                ('comm_stories', models.IntegerField()),
                ('comm_height', models.IntegerField()),
                ('comm_ground_floor_area', models.IntegerField()),
                ('comm_perimeter', models.IntegerField()),
                ('comm_heating_cooling', models.IntegerField()),
                ('comm_year_built', models.IntegerField()),
                ('comm_year_remodeled', models.IntegerField()),
                ('comm_condition', models.IntegerField()),
                ('comm_sq_footage', models.FloatField()),
                ('model_name_type', models.CharField(max_length=255)),
                ('code', models.IntegerField()),
                ('year', models.IntegerField()),
                ('size', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MailingAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.IntegerField()),
                ('street_number', models.CharField(blank=True, max_length=50, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('map_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('book_page_1', models.CharField(blank=True, max_length=255, null=True)),
                ('book_page_2', models.CharField(blank=True, max_length=255, null=True)),
                ('acerage', models.FloatField(blank=True, null=True)),
                ('neighborhood', models.IntegerField(blank=True, null=True)),
                ('tree_growth', models.IntegerField(blank=True, null=True)),
                ('zoning', models.IntegerField(blank=True, null=True)),
                ('zoning_secondary', models.IntegerField(blank=True, null=True)),
                ('topography', models.IntegerField(blank=True, null=True)),
                ('utilities', models.IntegerField(blank=True, null=True)),
                ('street_surface', models.IntegerField(blank=True, null=True)),
                ('tif_district', models.IntegerField(blank=True, null=True)),
                ('traffic_flow', models.IntegerField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('owners', models.ManyToManyField(blank=True, null=True, to='property.Owner')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('financing', models.IntegerField(default=0)),
                ('date', models.DateField()),
                ('verified', models.IntegerField()),
                ('validity', models.IntegerField()),
                ('tran_code', models.IntegerField()),
                ('land_code', models.IntegerField()),
                ('book_page', models.CharField(max_length=255)),
                ('previous_owner', models.CharField(max_length=255)),
                ('sale_type', models.IntegerField(default=0)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.Property')),
            ],
        ),
    ]
